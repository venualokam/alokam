
package com.skillcheck.web_management.services;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAXWS SI.
 * JAX-WS RI 2.1-02/02/2007 03:56 AM(vivekp)-FCS
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "PasswordAssessmentIntegrationService", targetNamespace = "http://webtest.skillcheck.com", wsdlLocation = "file:/D:/Personal/JaxwsSample1/web/WEB-INF/wsdl/PasswordAssessmentIntegrationService.wsdl")
public class PasswordAssessmentIntegrationService
    extends Service
{

    private final static URL PASSWORDASSESSMENTINTEGRATIONSERVICE_WSDL_LOCATION;

    static {
        URL url = null;
        try {
            url = new URL("file:/D:/Personal/JaxwsSample1/web/WEB-INF/wsdl/PasswordAssessmentIntegrationService.wsdl");
        } catch (MalformedURLException e) {
            e.printStackTrace();
        }
        PASSWORDASSESSMENTINTEGRATIONSERVICE_WSDL_LOCATION = url;
    }

    public PasswordAssessmentIntegrationService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PasswordAssessmentIntegrationService() {
        super(PASSWORDASSESSMENTINTEGRATIONSERVICE_WSDL_LOCATION, new QName("http://webtest.skillcheck.com", "PasswordAssessmentIntegrationService"));
    }

    /**
     * 
     * @return
     *     returns PasswordAssessmentIntegration
     */
    @WebEndpoint(name = "PasswordAssessmentIntegrationSoapPort")
    public PasswordAssessmentIntegration getPasswordAssessmentIntegrationSoapPort() {
        return (PasswordAssessmentIntegration)super.getPort(new QName("http://webtest.skillcheck.com", "PasswordAssessmentIntegrationSoapPort"), PasswordAssessmentIntegration.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PasswordAssessmentIntegration
     */
    @WebEndpoint(name = "PasswordAssessmentIntegrationSoapPort")
    public PasswordAssessmentIntegration getPasswordAssessmentIntegrationSoapPort(WebServiceFeature... features) {
        return (PasswordAssessmentIntegration)super.getPort(new QName("http://webtest.skillcheck.com", "PasswordAssessmentIntegrationSoapPort"), PasswordAssessmentIntegration.class, features);
    }

}
